// <auto-generated />
using System;
using Barista.AccountingGroups.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Barista.AccountingGroups.Migrations
{
    [DbContext(typeof(AccountingGroupsDbContext))]
    [Migration("20190331173425_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Barista.AccountingGroups.Domain.AccountingGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("Created");

                    b.Property<string>("DisplayName");

                    b.Property<Guid>("SaleStrategyId");

                    b.Property<DateTimeOffset>("Updated");

                    b.HasKey("Id");

                    b.ToTable("AccountingGroups");
                });

            modelBuilder.Entity("Barista.AccountingGroups.Domain.UserAuthorization", b =>
                {
                    b.Property<Guid>("AccountingGroupId");

                    b.Property<Guid>("UserId");

                    b.Property<Guid>("AccountingGroupId1");

                    b.Property<DateTimeOffset>("Created");

                    b.Property<int>("Level");

                    b.Property<DateTimeOffset>("Updated");

                    b.HasKey("AccountingGroupId", "UserId");

                    b.HasIndex("AccountingGroupId1");

                    b.ToTable("UserAuthorizations");
                });

            modelBuilder.Entity("Barista.AccountingGroups.Domain.UserAuthorization", b =>
                {
                    b.HasOne("Barista.AccountingGroups.Domain.AccountingGroup")
                        .WithMany()
                        .HasForeignKey("AccountingGroupId1")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
