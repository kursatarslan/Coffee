// <auto-generated />
using System;
using Barista.StockOperations.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Barista.StockOperations.Migrations
{
    [DbContext(typeof(StockOperationsDbContext))]
    [Migration("20190401131646_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Barista.StockOperations.Domain.StockOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("Created");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<decimal>("Quantity");

                    b.Property<Guid>("StockItemId");

                    b.Property<DateTimeOffset>("Updated");

                    b.HasKey("Id");

                    b.ToTable("StockOperations");

                    b.HasDiscriminator<string>("Discriminator").HasValue("StockOperation");
                });

            modelBuilder.Entity("Barista.StockOperations.Domain.ManualStockOperation", b =>
                {
                    b.HasBaseType("Barista.StockOperations.Domain.StockOperation");

                    b.Property<string>("Comment");

                    b.Property<Guid>("CreatedByUserId");

                    b.HasDiscriminator().HasValue("ManualStockOperation");
                });

            modelBuilder.Entity("Barista.StockOperations.Domain.SaleBasedStockOperation", b =>
                {
                    b.HasBaseType("Barista.StockOperations.Domain.StockOperation");

                    b.Property<Guid>("SaleId");

                    b.HasDiscriminator().HasValue("SaleBasedStockOperation");
                });
#pragma warning restore 612, 618
        }
    }
}
